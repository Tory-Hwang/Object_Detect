torch graph

graph(%input.1 : Float(1, 10)
      %weight.1 : Float(100, 10)
      %bias.1 : Float(100)
      %weight : Float(4, 100)
      %bias : Float(4)) {
  %5 : Float(10!, 100!) = aten::t(%weight.1), scope: FizBuzNet/Linear[hidden]
  %6 : int = prim::Constant[value=1](), scope: FizBuzNet/Linear[hidden]
  %7 : int = prim::Constant[value=1](), scope: FizBuzNet/Linear[hidden]
  %hidden : Float(1, 100) = aten::addmm(%bias.1, %input.1, %5, %6, %7), scope: FizBuzNet/Linear[hidden]
  %input : Float(1, 100) = aten::sigmoid(%hidden), scope: FizBuzNet
  %10 : Float(100!, 4!) = aten::t(%weight), scope: FizBuzNet/Linear[out]
  %11 : int = prim::Constant[value=1](), scope: FizBuzNet/Linear[out]
  %12 : int = prim::Constant[value=1](), scope: FizBuzNet/Linear[out]
  %13 : Float(1, 4) = aten::addmm(%bias, %input, %10, %11, %12), scope: FizBuzNet/Linear[out]
  return (%13);
}


onnx graph

graph(%input.1 : Float(1, 10)
      %1 : Float(100, 10)
      %2 : Float(100)
      %3 : Float(4, 100)
      %4 : Float(4)) {
  %5 : Float(1, 100) = onnx::Gemm[alpha=1, beta=1, transB=1](%input.1, %1, %2), scope: FizBuzNet/Linear[hidden]
  %6 : Float(1, 100) = onnx::Sigmoid(%5), scope: FizBuzNet
  %7 : Float(1, 4) = onnx::Gemm[alpha=1, beta=1, transB=1](%6, %3, %4), scope: FizBuzNet/Linear[out]
  return (%7);
}